hmmmm look into my folder structure, there is already a dependency checker folder look at how it works and move the data that does dependency check to that folder, run app will be the main launch of the whole script. so when launch script starts it must first check dependencies then continue with the rest of the functions as it is currently been done. 
Please create a folder named portable then recreate the dependency_files there as this must become a package I can drop in and it will analize what the script does, grab folder structure from root, scan requierments, ask user if they want a dedicated venv for the project or have it installed globally. then proceed to install the packaes in the txt file, and loop if any errors occured. lastly the run app must have a method to launch the python package main.py, wich in my case doesnt exist as I did something else and moved most functionality to modules. so account for that and ask the user to either type or select their .py app they would like to integrate. you can create a json settings and data file if user would like to reuse the run_app.py as main launcher and setup. the run_app.py must also launch client .py file in the respected venv. but do not delete the files just copy. also create a txt file with the instruction you have to follow to do also copy run_app.py